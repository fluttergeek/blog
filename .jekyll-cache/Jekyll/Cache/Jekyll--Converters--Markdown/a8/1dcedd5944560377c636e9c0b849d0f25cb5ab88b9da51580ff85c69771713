I"’<p>Iâ€™ve been hearing and reading GCD for quite a while now. Grand Central Dispatch. Whoa! Big word! Itâ€™s really just a concept of using threads. Itâ€™s not a railway system, no.</p>
<blockquote>
  <p>GCD is an API provided by apple to allow you to manage concurrent operations in a smooth way, in order to avoid freezing of your application and keep it always responsive for users. - Jaafar Barek</p>
</blockquote>

<p><a href="https://hackernoon.com/swift-multi-threading-using-gcd-for-beginners-2581b7aa21cb">Swift Multi-Threading using GCD For Beginners</a>. This is just a brief article with great visual aids to simply start off learning DispatchQueue.</p>

<p>When youâ€™re done with that, hold your breath and dive in two of these lakes. <a href="https://dev.to/leogdion/asynchronous-multi-threaded-parallel-world-of-swift-4gjh">Asynchronous Multi-Threaded Parallel World of Swift</a> and <a href="https://theswiftdev.com/2018/07/10/ultimate-grand-central-dispatch-tutorial-in-swift/">Ultimate Grand Central Dispatch tutorial in Swift</a>.</p>

<p>The former will first walk you through processing concepts and many visuals on how to use DispatchQueue, Semaphores, and SwiftUIâ€™s combine in relation to asynchronous operations.</p>

<p>The latter is almost the same but with less visuals and no <code class="highlighter-rouge">combine</code>. DispatchWorkItem and deadlocks is discussed which isnâ€™t found in the former.</p>

<p>Both are really valuable resources for learning <code class="highlighter-rouge">GCD</code>. It takes quite a while to grasp this simple concept but with broad applications, so I recommend reading on both to consolidate that chunk of knowledge. It is really intimidating to learn, since most of the time, programmers only usually use <code class="highlighter-rouge">background</code> and <code class="highlighter-rouge">main</code>.</p>

<p>I bet these resources are good for interviews too.</p>

:ET