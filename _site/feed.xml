<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://iosjunkie.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://iosjunkie.com/blog/" rel="alternate" type="text/html" /><updated>2019-11-27T04:11:08-08:00</updated><id>http://iosjunkie.com/blog/feed.xml</id><title type="html">Blog</title><subtitle>Demystifying complex instructions, tutorials, and a little bit more geared toward Flutter and iOS development or Swift stuff. Technical yet simple tips on how Flutter and iOS components work.</subtitle><entry><title type="html">From Swift UIKit to Dart Flutter Review</title><link href="http://iosjunkie.com/blog/from-swift-uikit-to-dart-flutter-review/" rel="alternate" type="text/html" title="From Swift UIKit to Dart Flutter Review" /><published>2019-11-06T21:23:44-08:00</published><updated>2019-11-06T21:23:44-08:00</updated><id>http://iosjunkie.com/blog/from-swift-uikit-to-dart-flutter-review</id><content type="html" xml:base="http://iosjunkie.com/blog/from-swift-uikit-to-dart-flutter-review/">&lt;p&gt;I’ve given this some thought for maybe a month or two now. To switch from iOS developer to Flutter developer, even though I’m not employed or something. Now, why would I do that? Xcode is the best IDE out there, why switch to a newbie framework that only has VSCode as an IDE?&lt;/p&gt;

&lt;p&gt;Well, since I’m unemployed that means I’m a bit closer to the broke spectrum. I was thinking about what if Apple keeps upgrading its hardware requirements and I’m no longer able to keep up with it. I realized that when I had to run a Catalina on this Hackintosh device I’m using. It didn’t go so well. I couldn’t use SwiftUI’s canvass feature. I assume that I’m never going to be able to try it anymore. So what’s next if they upgraded even further? And even with UIKit, as my project gets bigger and bigger, the lag on Xcode becomes more and more unbearable.&lt;/p&gt;

&lt;p&gt;So I thought, I’d have to just deal with a lightweight IDE to get by. Since I still want to develop on a mobile platform, Flutter has to be the best thing out there. Its community is growing fast, and therefore it is easier for newbies like me to find solutions.&lt;/p&gt;

&lt;p&gt;I have tried coding in SwiftUI a bit, but never built a fully functional app with it. I guess I can compare learning Flutter and SwiftUI since they are both declarative. Both can get painfully spaghetti as the project grows. It’s totally the least I like about using either. If you’ve been a web developer, it’s also comparable to that. Flutter in dart is like having HTML, javascript, and CSS all combined to become a programming language that is object-oriented. So you see, the pain in having to code every bit of structure is there. It’s not the drag and drop that I see in Xcode anymore or the utility area which makes my code a lot slimmer.&lt;/p&gt;

&lt;p&gt;Flutter feels like coding a javascript framework, but you can do it in one file if you feel like it. That file would be main.dart. It should always be under the &lt;code&gt;/lib&lt;/code&gt; folder and not in the subfolders that you might make. The Gemfile I used to work with is now called pubspec.yaml. Once edited, it updates the packages automatically without having to run a command on your terminal. I guess it works that way because of the extensions I installed in VSCode that makes Flutter a lot less tedious to work with. Here’s the list of extensions that I have installed:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Auto-save on Window Change&lt;/li&gt;
  &lt;li&gt;Awesome Flutter Snippets&lt;/li&gt;
  &lt;li&gt;Beautify&lt;/li&gt;
  &lt;li&gt;Better Align&lt;/li&gt;
  &lt;li&gt;Better Comments&lt;/li&gt;
  &lt;li&gt;bloc&lt;/li&gt;
  &lt;li&gt;Bookmarks&lt;/li&gt;
  &lt;li&gt;Bracket Pair Colorizer 2&lt;/li&gt;
  &lt;li&gt;Color Highlight&lt;/li&gt;
  &lt;li&gt;Dart&lt;/li&gt;
  &lt;li&gt;Flutter&lt;/li&gt;
  &lt;li&gt;Guides&lt;/li&gt;
  &lt;li&gt;Image Preview&lt;/li&gt;
  &lt;li&gt;Material Icon Theme&lt;/li&gt;
  &lt;li&gt;Project Manager&lt;/li&gt;
  &lt;li&gt;Pubspec Assist&lt;/li&gt;
  &lt;li&gt;TabOut&lt;/li&gt;
  &lt;li&gt;Todo Tree&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some of these might not even be specifically for Flutter. It’s also good to know that these extensions are easily found on like some kind of AppStore inside the VSCode.&lt;/p&gt;

&lt;h2 id=&quot;learning-curve&quot;&gt;Learning Curve&lt;/h2&gt;

&lt;p&gt;A week ago, I could hardly make an idea come to life with Flutter because it looks very limiting to use. I attribute it mostly to my poor knowledge-base of the kinds of widgets there are. The first things I had to understand were Stateful and Stateless. I’m not going to dive deeply into it but I’ll try to explain it briefly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stateless&lt;/strong&gt; are widgets that will have its contents reloaded, like all of it in that widget. If you want to change any data on this type of widget, it would be like creating an object again in place of the previous one because widgets are objects made up of a &lt;code&gt;class&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stateful&lt;/strong&gt; is particularly going to reload only the data and not the entire build of that widget. This involves creating two classes, which sounds tedious already, I know. But with the autocomplete feature in one of those extensions above, you only need one word to make all that appear. The same goes for the stateless. Apparently, since some widgets have so more than one required property, you can choose to autocomplete those property by typing &lt;code&gt;alt + space&lt;/code&gt;. So if you know what you’re doing, it’s not exactly that cumbersome.&lt;/p&gt;

&lt;p&gt;Take the &lt;code&gt;import&lt;/code&gt; line for example, you mostly need to import material.dart, foundation.dart, intl.dart, if you’re working on an android project and depending on what you need. There’s also autocomplete on those imports even if it comes from the dependencies you installed on your project, as well as the importing files you have made yourself, so you don’t have to worry much about making typos.&lt;/p&gt;

&lt;p&gt;Unfortunately, you have to import every bit of widget you need that is in a separate file. Unlike in Xcode, you can’t access classes without importing them. The cool thing about the autocomplete feature in one of those extensions is that if you use a class/widget, and let the autocomplete do the work for you, it will automatically import that class/widget.&lt;/p&gt;

&lt;p&gt;One line function. I think this also exists in Swift, but you might be curious to know if you see one of these &lt;code&gt;() =&amp;gt; print('hi');&lt;/code&gt;. It is simply like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;() {
	print('hi');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a previous Swift programmer, the transition will probably be a breeze. There are so many similar concepts even if words don’t look the same. But the commas and semicolons are unforgiving. You also wouldn’t like the way you need to import every image and font you need in your app in your pubspec.yaml file. &lt;strong&gt;Update&lt;/strong&gt;: I have decided to come back to being an iOS developer because the syntax of Dart and the way things are handled in Flutter are just way too much. I don’t like handling states with Flutter which is a very complicated process. And having to implement state management every time the UI needs changing is a really dreadful task. But that’s not all, it’s painfully repetitive to declare your assets in the pubspec.yaml.&lt;/p&gt;

&lt;p&gt;For a previous Android developer, which I also used to be, well, Flutter is a way much easier way to develop apps. Though, coding with Flutter feels so much closer to Android development than UIKit. A huge reason why I find UIKit easier. But if you’ve never tried Xcode at all, you’ll still feel at home with Flutter, and the best part is it’s lightweight.&lt;/p&gt;

&lt;p&gt;I have said so many bad things about Flutter now that I realized, but it simply isn’t that hard to learn. Sure, there are so many new things that even I only just learned, but since most of the code I wrote is repetitive, it makes more and more sense as I go through with the Udemy course about Flutter. With the way things are, it is no doubt Flutter could be adapted by many developers in the future. Its lightweight-ness to develop is just something most mobile developers could wish for, but I wish it was more similar to Swift and UIKit.&lt;/p&gt;</content><author><name>jules</name></author><category term="experience" /><category term="review" /><category term="flutter" /><category term="swiftui" /><category term="dart" /><category term="uikit" /><category term="swift" /><summary type="html">I’ve given this some thought for maybe a month or two now. To switch from iOS developer to Flutter developer, even though I’m not employed or something. Now, why would I do that? Xcode is the best IDE out there, why switch to a newbie framework that only has VSCode as an IDE?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/flutter_banner.jpg" /></entry><entry><title type="html">Is Catalina Sluggish? (Hackintosh)</title><link href="http://iosjunkie.com/blog/is-catalina-sluggish-hackintosh/" rel="alternate" type="text/html" title="Is Catalina Sluggish? (Hackintosh)" /><published>2019-10-30T04:32:56-08:00</published><updated>2019-10-30T04:32:56-08:00</updated><id>http://iosjunkie.com/blog/is-catalina-sluggish-hackintosh</id><content type="html" xml:base="http://iosjunkie.com/blog/is-catalina-sluggish-hackintosh/">&lt;p&gt;As a developer, technically, not yet, but I’m trying to become an iOS developer. I have been giving SwiftUI some thought. I want to try it because the declarative way of developing apps is trending and the canvas besides the code is tantalizing. Maybe it’ll be a lot faster than using a storyboard.&lt;/p&gt;

&lt;p&gt;Let me give you an idea about my specs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dell Optiplex 9020 micro&lt;/li&gt;
  &lt;li&gt;2 GHz Intel Core i5&lt;/li&gt;
  &lt;li&gt;Ram: 12 GB 1600 MHz DDR3&lt;/li&gt;
  &lt;li&gt;Quadcore&lt;/li&gt;
  &lt;li&gt;WiFi Dongle: DWA-123 11n Adapter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m running a Mojave on this Hackintosh, and I have split my partition into two to try out Catalina. I used dosdude1’s patcher to install Catalina because it failed when I try to update using App Store or the connection gets interrupted when downloading. So far installation went fine. It took some time and I thought I was stuck in a loop of spinning wheel. Glad it went on after a while.&lt;/p&gt;

&lt;p&gt;After importing all files and settings from Mojave, it said something like it can’t copy Realtek driver or something. Too bad I didn’t take a photo of it so I could search for whatever was happening. I just skipped it and my desktop was then shown.&lt;/p&gt;

&lt;p&gt;To my disappointment, I couldn’t get the internet to work. I tried installing the driver from &lt;a href=&quot;https://www.dlink.com.ph/dwa-123-d1/&quot; title=&quot;DWA-123&quot;&gt;https://www.dlink.com.ph/dwa-123-d1/&lt;/a&gt;, and I also tried installing IO80211Family.kext. All with no luck. I’m giving up at this point because somehow my audio output doesn’t work anymore as well. Although Initially, right after installation, I can listen to songs with iTunes.&lt;/p&gt;

&lt;h3 id=&quot;what-you-came-here-for&quot;&gt;What You Came Here For&lt;/h3&gt;

&lt;p&gt;No, it isn’t sluggish as I’ve read randomly from YouTube commenters on reviews regarding Mac OS Catalina. Or maybe it is, but it was negligible. I tried using Xcode 11.1 to test if it were to slow down. It didn’t really slow down. I can still use it with ease the way it is in Mojave.&lt;/p&gt;

&lt;h3 id=&quot;2nd-attempt&quot;&gt;2nd Attempt&lt;/h3&gt;

&lt;p&gt;I just bought a Samsung EVO SSD to replace my external hard drive where my Mac was booted from. So, I created 2 partitions because apparently Catalina requires an APFS volume. I used Carbon Copy Cloner to clone my Mojave into the APFS volume. Since I still have the Catalina installer, I gave it another shot.&lt;/p&gt;

&lt;p&gt;Everything works like before but with all my files from Mojave intact. The audio works as well. The only thing that doesn’t work was my WiFi USB dongle. It seems that my PC can’t detect it.&lt;/p&gt;

&lt;p&gt;I don’t know why I haven’t seen this before, but the solution is readily available on the internet. I only had to download &lt;a href=&quot;https://github.com/chris1111/Wireless-USB-Adapter-Clover/releases/tag/V10&quot;&gt;Wireless USB Adapter Clover-V10&lt;/a&gt; and install it. Good lord, my WiFi works now.&lt;/p&gt;

&lt;h5 id=&quot;what-doesnt-work-well&quot;&gt;What doesn’t work well?&lt;/h5&gt;

&lt;p&gt;My keyboard is so slow when typing. It takes a while to see the letters, numbers or symbols. Considering that I’m using a wireless keyboard, maybe it really does make a difference if I had used a wired keyboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen Shot 2019-11-27 at 12.33.16 PM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>jules</name></author><category term="SwiftUI" /><category term="DWA-123 11n " /><category term="IO80211Family.kext" /><category term="kext" /><category term="wifi" /><category term="realtek" /><category term="sluggish" /><category term="os" /><category term="mac" /><category term="catalina" /><category term="hackintosh" /><summary type="html">As a developer, technically, not yet, but I’m trying to become an iOS developer. I have been giving SwiftUI some thought. I want to try it because the declarative way of developing apps is trending and the canvas besides the code is tantalizing. Maybe it’ll be a lot faster than using a storyboard.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/macos-catalina-1.jpg" /></entry><entry><title type="html">Delux M618 USB Wired Ergonomic Vertical Optical Mouse Review</title><link href="http://iosjunkie.com/blog/delux-m618-usb-wired-ergonomic-vertical-optical-mouse-review/" rel="alternate" type="text/html" title="Delux M618 USB Wired Ergonomic Vertical Optical Mouse Review" /><published>2019-10-28T22:34:18-08:00</published><updated>2019-10-28T22:34:18-08:00</updated><id>http://iosjunkie.com/blog/delux-m618-usb-wired-ergonomic-vertical-optical-mouse-review</id><content type="html" xml:base="http://iosjunkie.com/blog/delux-m618-usb-wired-ergonomic-vertical-optical-mouse-review/">&lt;p&gt;My new vertical mouse just arrived as we speak. This is a little different from the &lt;a href=&quot;http://iosjunkie.com/blog/using-vertical-mouse-my-take/&quot; title=&quot;Vertical Mouse&quot;&gt;previous&lt;/a&gt; one; It has a wire instead of it being wireless and it feels funny around my hands.&lt;/p&gt;

&lt;p&gt;I have now been accustomed to using my previous vertical mouse. It felt rather more comfortable when I wrap my hand around it, but I don’t feel the same comfort with this new one.&lt;/p&gt;

&lt;p&gt;However, the purpose of this as a mouse is on point. It doesn’t lag like the previous vertical mouse. No lags in scrolling too. But it has friction on my mousepad. So, I removed the mousepad and now I’m using it on top of a wood. It feels much smoother this way.&lt;/p&gt;

&lt;p&gt;The color I got is black, though I would’ve liked it to be the color I’ve used in the image above which is matte white. Mine has three glossy buttons, not including the left and right-click buttons. Like the image above, it has some kind of tail but it feels like it’s in the wrong place.&lt;/p&gt;

&lt;h2 id=&quot;update&quot;&gt;Update&lt;/h2&gt;

&lt;p&gt;I’ve gotten used to this mouse. It’s unfortunate that I ordered another vertical mouse that looks similar to my old mouse. The key to using this mouse is holding the upper part of it.&lt;/p&gt;

&lt;p&gt;Another important thing not to do is to rest your hand on it if you aren’t using it. I don’t know why but there is pressure on my pinky when I rest it there for too long. It gets sore after a while.&lt;/p&gt;

&lt;p&gt;I don’t remember the comfort of using my previous mouse, but this just works. Although, the left-click button is kind not working at times or if I don’t use enough force to press it. Most of the time it works though. I’m just not sure if I’m pressing it too softly.&lt;/p&gt;</content><author><name>jules</name></author><category term="mouse" /><category term="vertical" /><category term="cts" /><category term="carpal tunnel syndrome" /><category term="hardware" /><category term="review" /><summary type="html">My new vertical mouse just arrived as we speak. This is a little different from the previous one; It has a wire instead of it being wireless and it feels funny around my hands.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Delux-M618-2-4G-Wireless-Vertical-Mouse-Inalambrico-Ergonomic-1600-DPI-USB-Wired-Optical-Mouse-with.jpg" /></entry><entry><title type="html">Using Touch ID and Face ID In Your App (Swift 5)</title><link href="http://iosjunkie.com/blog/using-touch-id-and-face-id-in-your-app-swift-5/" rel="alternate" type="text/html" title="Using Touch ID and Face ID In Your App (Swift 5)" /><published>2019-10-28T12:00:00-08:00</published><updated>2019-10-28T12:00:00-08:00</updated><id>http://iosjunkie.com/blog/using-touch-id-and-face-id-in-your-app-swift-5</id><content type="html" xml:base="http://iosjunkie.com/blog/using-touch-id-and-face-id-in-your-app-swift-5/">&lt;p&gt;To use Face ID, or even Touch ID, we need to import &lt;code&gt;LocalAuthentication&lt;/code&gt;. The code below works for both Face and Touch ID. Whichever is enabled in the user’s settings.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let context = LAContext()
var error: NSError?

if context.canEvaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, error: &amp;amp;error) {
	// This reason is only for Touch ID, not Face ID
    // The reason for accessing Face ID, is found in Info.plist
    let reason: String = &quot;Please use Touch ID to unlock&quot;
    
    context.evaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, localizedReason: reason) { [weak self] success, authenticationError in
    	Dispatch.main.async {
        	if success {
            	// do some unlocking of data or
                // present new view
            } else {
            	// Face wasn't detected
                // Maybe user was wearing sunglasses
                if error = error {
                  let ac = UIAlertController(title: &quot;Authetication Failed!&quot;),
                              message: self.reportTouchIDError(error: error),
                              preferredStyle: .alert)
                  ac.addAction(UIAlertAction(title: &quot;OK&quot;, style: .default))
                  self?.present(ac, animated: true)
                }
            }
        }
    }
} else {
	// Biometric is not supported by your iOS device
    let ac = UIAlertController(title: &quot;Biometric Authentication Unavailable&quot;),
                  message: &quot;Your device is not configured for biometric authentication.&quot;,
                  preferredStyle: .alert)
    ac.addAction(UIAlertAction(title: &quot;OK&quot;, style: .default))
    self?.present(ac, animated: true)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before this can work, we must add a key value in our Info.plist to alert the user that we are going to be using this biometric feature.&lt;/p&gt;

&lt;p&gt;Key: Privacy - Face ID Usage Description&lt;/p&gt;

&lt;p&gt;Type: String&lt;/p&gt;

&lt;p&gt;Value: This app uses Face ID to confirm your identity&lt;/p&gt;

&lt;p&gt;There’s a more specific way of producing an error. This example was explained by &lt;code&gt;David Tran&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func reportTouchIDError(error: NSError) -&amp;gt; String {
	switch error.code {
    case LAError.AuthenticationFailed.rawValue:
    	return &quot;Authentication Failed!&quot;
    case LAError.PasscodeNotSet.rawValue:
    	return &quot;Passcode not set!&quot;
    case LAError.SystemCancel.rawValue:
    	return &quot;Authentication was cancelled by the system!&quot;
    case LAError.UserCancel.rawValue:
    	return &quot;User cancel auth&quot;
    case LAError.TouchIDNotEnrolled.rawValue:
    	return &quot;User has not enrolled any finger with touch ID&quot;
    case LAError.TouchIDNotAvailable.rawValue:
    	return &quot;Touch ID is not available&quot;
    case LAError.UserFallBack.rawValue:
    	return &quot;User tapped enter password&quot;
    default:
    	return error.localizedDescription
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/vf7JyFFSNDU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>jules</name></author><category term="biometric" /><category term="touch id" /><category term="face id" /><category term="swift" /><summary type="html">To use Face ID, or even Touch ID, we need to import LocalAuthentication. The code below works for both Face and Touch ID. Whichever is enabled in the user’s settings.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/iphone-x-faceid-670x335.jpg" /></entry><entry><title type="html">Using Forestry As A CMS For Your Jekyll Blog</title><link href="http://iosjunkie.com/blog/using-forestry-as-a-cms-for-your-jekyll-blog/" rel="alternate" type="text/html" title="Using Forestry As A CMS For Your Jekyll Blog" /><published>2019-10-27T08:00:00-08:00</published><updated>2019-10-27T08:00:00-08:00</updated><id>http://iosjunkie.com/blog/using-forestry-as-a-cms-for-your-jekyll-blog</id><content type="html" xml:base="http://iosjunkie.com/blog/using-forestry-as-a-cms-for-your-jekyll-blog/">&lt;p&gt;This is by far the best CMS for Jekyll I have discovered. It only takes a few clicks to get it up and running, unlike Jekyll-admin/manager and Netlify. I still haven’t found a workaround the error I’m getting with &lt;code&gt;/.forestry/settings.yml&lt;/code&gt;. It keeps saying &lt;code&gt;Invalid yaml syntax&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen Shot 2019-10-28 at 2.36.31 PM.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
However, everything seems to be working just fine with Forestry.&lt;/p&gt;

&lt;p&gt;Things I like about it:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;All the posts can be sorted by either &lt;code&gt;title&lt;/code&gt; or &lt;code&gt;date&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;I can insert and upload pictures on the markdown text editor with ease. It allows me to choose a photo from the assets folder that I’ve configured. It also allows me to just input a link instead of choosing from the assets folder.&lt;/li&gt;
  &lt;li&gt;I can also insert and upload an image for my &lt;code&gt;Featured Image&lt;/code&gt; front matter.&lt;/li&gt;
  &lt;li&gt;The markdown editor looks more professional that &lt;code&gt;jekyll-manager&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;I don’t have to do &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; anymore.&lt;/li&gt;
  &lt;li&gt;I don’t have to push every change or addition I make to Github anymore. Once I click &lt;code&gt;save&lt;/code&gt; on forestry, it instantly writes it on my Github repository.&lt;/li&gt;
  &lt;li&gt;Once you set your admin path, in settings, to &lt;code&gt;\admin\&lt;/code&gt;, it will deploy an admin code to your repository which allows you to access forestry from &lt;code&gt;http://your-blog.github.io/admin/.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Grammarly works on the markdown text editor, unlike in &lt;code&gt;jekyll-manager&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Things I don’t like about it:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Whenever you edit an old post, it goes back up to the top of the recent list.&lt;/li&gt;
  &lt;li&gt;Whenever I select an image for my Featured Image in the front matter, it leaves whitespaces on the filename. Rendering &lt;code&gt;background-image: url(/blog/assets/images/Screen Shot 2019-10-28 at 11.12.35 AM.png);&lt;/code&gt; invalid. A single quote is then required to fix this.&lt;/li&gt;
  &lt;li&gt;You need to switch to &lt;code&gt;Raw Editor&lt;/code&gt; instead of &lt;code&gt;WYSIWYG&lt;/code&gt; to embed a YouTube video to prevent the text editor from detecting a link. Otherwise, just cancel the link creation when prompted.&lt;/li&gt;
  &lt;li&gt;It doesn’t automatically add new posts to your sitemap.xml. So, you should build Jekyll locally on your terminal.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;tips&quot;&gt;Tips:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Every time I write a block of code or insert an image in the &lt;code&gt;markdown&lt;/code&gt;, I have a hard time going to the next line. Merely pressing &lt;code&gt;Enter&lt;/code&gt; doesn’t do the trick. To go to the next line, you must &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Enter&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;You don’t have to create a front matter for the body of your article. It took me a while to realize that there’s a markdown editor by default. I tried it first on my iPad, that’s why it took me a long time to notice the markdown editor, which is more conspicuous when using a web browser on my pc. It’s a gigantic view on the right side of my web browser when using the pc, but it looks like this on the iPad.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/F81E8C91-8257-430E-A75A-562F33452CBF.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
You need to click the icon on the top right corner to switch panels in order for you to see the text editor, which is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/7CFB1A72-88DA-4872-A596-3FD5804C40A4.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So that’s how it looks on the iPad. I regret wasting my time on &lt;code&gt;jekyll-manager&lt;/code&gt; for quite some time now for not deeply exploring forestry.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This is my workaround on the sitemap.xml problem. I use the app &lt;code&gt;Automator&lt;/code&gt; to automate some terminal commands that will pull my Github blog repo and build Jekyll on it, then push it back to Github.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;cd /Path/to/Blog
source ~/.bash_profile
git pull origin gh-pages
JEKYLL_ENV=production bundle exec jekyll build
git add .
git commit -m &quot;new changes&quot;
git push origin gh-pages --force
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change the &lt;code&gt;Date&lt;/code&gt; front matter to hidden, required, and Use &lt;code&gt;now&lt;/code&gt; as default.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>jules</name></author><category term="cms" /><category term="netlify" /><category term="forestry.io" /><category term="forestry" /><category term="jekyll" /><summary type="html">This is by far the best CMS for Jekyll I have discovered. It only takes a few clicks to get it up and running, unlike Jekyll-admin/manager and Netlify. I still haven’t found a workaround the error I’m getting with /.forestry/settings.yml. It keeps saying Invalid yaml syntax.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Screen%20Shot%202019-10-28%20at%202.33.01%20PM.png" /></entry><entry><title type="html">Using Netlify As A CMS For Your Jekyll Blog</title><link href="http://iosjunkie.com/blog/using-netlify-as-a-cms-for-your-jekyll-blog/" rel="alternate" type="text/html" title="Using Netlify As A CMS For Your Jekyll Blog" /><published>2019-10-27T08:00:00-08:00</published><updated>2019-10-27T08:00:00-08:00</updated><id>http://iosjunkie.com/blog/using-netlify-as-a-cms-for-your-jekyll-blog</id><content type="html" xml:base="http://iosjunkie.com/blog/using-netlify-as-a-cms-for-your-jekyll-blog/">&lt;p&gt;I was actually intimidated by the idea of trying out &lt;code&gt;Netlify&lt;/code&gt; for my blog but not so much anymore. It turned out pretty easy to do.&lt;/p&gt;

&lt;p&gt;First thing’s first, &lt;code&gt;Netlify&lt;/code&gt; is some kind of web hosting. Although you can opt to just run a local server from your computer by just running &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s create our &lt;code&gt;Netlify&lt;/code&gt; account and follow this guide by Thomas Bradley:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/eEjdJY_Ak8U&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;This is actually a part of his Jekyll + NetlifyCMS hosting setup playlist. I didn’t find the rest to be that useful, so I’ve written down below the next steps you should take.&lt;/p&gt;

&lt;p&gt;To create the &lt;code&gt;Netlify Dashboard&lt;/code&gt;, you need to create a folder. This folder is a subdirectory of your &lt;code&gt;blog&lt;/code&gt;. So, if you set your baseurl from your &lt;code&gt;_config.yml&lt;/code&gt; to &lt;code&gt;\blog&lt;/code&gt;, then this folder, let’s say, &lt;code&gt;admin&lt;/code&gt; can be accessed through &lt;code&gt;\blog\admin&lt;/code&gt;. This folder has to be created at the root of your Jekyll project folder. Then there are only two files you need to create under the admin folder. &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;config.yml&lt;/code&gt;. This is another config.yml different from the root’s _config.yml.&lt;/p&gt;

&lt;p&gt;I copied the contents of &lt;code&gt;index.html&lt;/code&gt; from &lt;a href=&quot;https://www.netlifycms.org/docs/add-to-your-site/#app-file-structure&quot; title=&quot;Add to Your Site&quot;&gt;Add to Your Site&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
  &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&amp;gt;
  &amp;lt;title&amp;gt;Content Manager&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;!-- Include the script that builds the page and powers Netlify CMS --&amp;gt;
  &amp;lt;script src=&quot;https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now comes the tricky part, which is setting up the look of our admin dashboard in &lt;code&gt;config.yml&lt;/code&gt;. If you reverse engineer it, it’s easier than reading through html.&lt;/p&gt;

&lt;p&gt;There are ways to login to your dashboard, but I chose to login with &lt;code&gt;Github&lt;/code&gt;. To do that, here’s what you’ll have to put in &lt;code&gt;admin/config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;backend:
  name: github
  branch: gh-pages # Branch to update (optional; defaults to master)
  repo: iosjunkie/blog # Repository of your blog in Github

publish_mode: editorial_workflow
media_folder: &quot;assets/images&quot;

collections:
  - name: &quot;posts&quot;
    label: &quot;Posts&quot;
    folder: &quot;_posts&quot;
    create: true
    slug: &quot;---&quot;
    fields:
      - { label: &quot;Layout&quot;, name: &quot;layout&quot;, widget: &quot;hidden&quot;, default: &quot;post&quot; }
      - { label: &quot;Title&quot;, name: &quot;title&quot;, widget: &quot;string&quot; }
      - label: &quot;Featured Image&quot;
        name: &quot;image&quot;
        widget: &quot;image&quot;
        required: false
        media_library:
          config:
            multiple: false
      - { label: &quot;Tags&quot;, name: &quot;tags&quot;, widget: &quot;list&quot;, required: false }
      - { label: &quot;Categories&quot;, name: &quot;categories&quot;, widget: &quot;string&quot;, required: true }
      - { label: &quot;Draft&quot;, name: &quot;draft&quot;, widget: &quot;boolean&quot;, default: true }
      - label: &quot;Body&quot;
        name: &quot;body&quot;
        widget: &quot;markdown&quot;
  - name: &quot;website-settings&quot;
    label: &quot;Settings&quot;
    files:
      - label: &quot;Settings&quot;
        name: &quot;site&quot;
        file: &quot;_config.yml&quot;
        fields:
          - label: &quot;Name&quot;
            name: &quot;name&quot;
            widget: &quot;string&quot;
          - label: &quot;Description&quot;
            name: &quot;description&quot;
            widget: &quot;markdown&quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I just came up with this from the tutorials I watched. The images below are the results of what we just typed in our &lt;code&gt;config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is what it looks like when I go to &lt;code&gt;http://localhost:4000/blog/admin/#/collections/website-settings&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen Shot 2019-10-28 at 11.11.40 AM.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/blog/assets/images/Screen Shot 2019-10-28 at 11.11.59 AM.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
And this is what it looks like in &lt;code&gt;http://localhost:4000/blog/admin/#/collections/posts:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen Shot 2019-10-28 at 11.12.13 AM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen Shot 2019-10-28 at 11.12.35 AM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once done, commit and push it to your Github. Go back to &lt;code&gt;https://app.netlify.com/sites/your-blog/deploys&lt;/code&gt; and make sure it is deployed. After deploying, you will be able to access Netlify admin dashboard thru &lt;code&gt;https://your-blog.netlify.com/admin&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;take&quot;&gt;Take&lt;/h2&gt;

&lt;p&gt;I like the UI of Netlify CMS. Reminds me of Netflix all the time and as I’m typing this article, I often get a typo of &lt;code&gt;Netflix&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Would I use it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The list of posts is not sorted by date. I’m used to having it sorted by date. The images in the &lt;code&gt;/assets/images/&lt;/code&gt; folder are also not sorted and there’s no way of sorting any collection in this CMS. Sad, but true.&lt;/p&gt;

&lt;p&gt;That’s my only problem with it, but if that’s not a problem for you, then give it a go.&lt;/p&gt;</content><author><name>jules</name></author><category term="cms" /><category term="netlify" /><category term="jekyll" /><summary type="html">I was actually intimidated by the idea of trying out Netlify for my blog but not so much anymore. It turned out pretty easy to do.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Screen%20Shot%202019-10-28%20at%2011.12.35%20AM.png" /></entry><entry><title type="html">Jekyll Code Syntax Indentation</title><link href="http://iosjunkie.com/blog/jekyll-code-syntax-indentation/" rel="alternate" type="text/html" title="Jekyll Code Syntax Indentation" /><published>2019-10-26T16:00:00-08:00</published><updated>2019-10-26T16:00:00-08:00</updated><id>http://iosjunkie.com/blog/jekyll-code-syntax-indentation</id><content type="html" xml:base="http://iosjunkie.com/blog/jekyll-code-syntax-indentation/">&lt;p&gt;I’ve been bothered by this problem for quite a while now. I never thought of finding a solution for it, but now that I have, it’s actually pretty simple. All that’s needed to fix this is a 3 line CSS code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-moz-tab-size: 4;
-o-tab-size: 4;
tab-size: 4;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I needed this because every time I indent my code with the &lt;code&gt;tab bar&lt;/code&gt;, it goes much further than 4 spaces. It’s disturbing. It probably did 16 spaces. Now, that issue’s gone. I’ve also found a way to darken the background of every code blocks I write. It’s a code generated by prism, but I had to tweak it a bit to make it compatible with Jekyll.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/* PrismJS 1.17.1
https://prismjs.com/download.html#themes=prism-tomorrow&amp;amp;languages=clike+javascript&amp;amp;plugins=line-highlight+line-numbers+highlight-keywords+keep-markup */
/**
 * prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML
 * Based on https://github.com/chriskempson/tomorrow-theme
 * @author Rose Pritchard
 */

pre code {
	color: #ccc;
	background: none;
	font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
	font-size: 1em;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;

}

/* Code blocks */
pre {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
}

:not(pre) &amp;gt; code,
pre {
	background: #2d2d2d;
}

code.highlighter-rouge {
	background: none;
}

/* Inline code */
:not(pre) &amp;gt; code {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}

.token.comment,
.token.block-comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #999;
}

.token.punctuation {
	color: #ccc;
}

.token.tag,
.token.attr-name,
.token.namespace,
.token.deleted {
	color: #e2777a;
}

.token.function-name {
	color: #6196cc;
}

.token.boolean,
.token.number,
.token.function {
	color: #f08d49;
}

.token.property,
.token.class-name,
.token.constant,
.token.symbol {
	color: #f8c555;
}

.token.selector,
.token.important,
.token.atrule,
.token.keyword,
.token.builtin {
	color: #cc99cd;
}

.token.string,
.token.char,
.token.attr-value,
.token.regex,
.token.variable {
	color: #7ec699;
}

.token.operator,
.token.entity,
.token.url {
	color: #67cdcc;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

.token.inserted {
	color: green;
}

pre[data-line] {
	position: relative;
	padding: 1em 0 1em 3em;
}

.line-highlight {
	position: absolute;
	left: 0;
	right: 0;
	padding: inherit 0;
	margin-top: 1em; /* Same as .prism’s padding-top */

	background: hsla(24, 20%, 50%,.08);
	background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));

	pointer-events: none;

	line-height: inherit;
	white-space: pre;
}

	.line-highlight:before,
	.line-highlight[data-end]:after {
		content: attr(data-start);
		position: absolute;
		top: .4em;
		left: .6em;
		min-width: 1em;
		padding: 0 .5em;
		background-color: hsla(24, 20%, 50%,.4);
		color: hsl(24, 20%, 95%);
		font: bold 65%/1.5 sans-serif;
		text-align: center;
		vertical-align: .3em;
		border-radius: 999px;
		text-shadow: none;
		box-shadow: 0 1px white;
	}

	.line-highlight[data-end]:after {
		content: attr(data-end);
		top: auto;
		bottom: .4em;
	}

.line-numbers .line-highlight:before,
.line-numbers .line-highlight:after {
	content: none;
}

pre.line-numbers {
	position: relative;
	padding-left: 3.8em;
	counter-reset: linenumber;
}

pre.line-numbers &amp;gt; code {
	position: relative;
	white-space: inherit;
}

.line-numbers .line-numbers-rows {
	position: absolute;
	pointer-events: none;
	top: 0;
	font-size: 100%;
	left: -3.8em;
	width: 3em; /* works for line-numbers below 1000 lines */
	letter-spacing: -1px;
	border-right: 1px solid #999;

	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

}

	.line-numbers-rows &amp;gt; span {
		pointer-events: none;
		display: block;
		counter-increment: linenumber;
	}

		.line-numbers-rows &amp;gt; span:before {
			content: counter(linenumber);
			color: #999;
			display: block;
			padding-right: 0.8em;
			text-align: right;
		}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is only enough to darken the background, but I can’t get the syntax to be colorful, especially when I want my swift to look more like it’s on an IDE. However for this article, this is enough of a solution.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="jekyll" /><category term="code" /><category term="syntax" /><category term="indentation" /><category term="highlight" /><category term="block" /><category term="prism" /><category term="pygment" /><category term="markdown" /><category term="css" /><summary type="html">I’ve been bothered by this problem for quite a while now. I never thought of finding a solution for it, but now that I have, it’s actually pretty simple. All that’s needed to fix this is a 3 line CSS code:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Screen%20Shot%202019-10-27%20at%209.16.22%20PM.png" /></entry><entry><title type="html">Taking A Look At MVVM</title><link href="http://iosjunkie.com/blog/mvvm/" rel="alternate" type="text/html" title="Taking A Look At MVVM" /><published>2019-10-25T16:00:00-08:00</published><updated>2019-10-25T16:00:00-08:00</updated><id>http://iosjunkie.com/blog/mvvm</id><content type="html" xml:base="http://iosjunkie.com/blog/mvvm/">&lt;p&gt;There are two MVVM tutorials I’ve come across. Let’s see how similar it is and how we can tell both are MVVM. I will arrange their code in this order: &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;view model&lt;/code&gt;, and &lt;code&gt;controller&lt;/code&gt;. There’s an extra in Brian Voong’s example.&lt;/p&gt;

&lt;h3 id=&quot;first-from-brian-voong&quot;&gt;First from Brian Voong&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;// Course.swift
struct Course: Decodable {
    id : int
    name: String
    number_of_lessons: Int
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;// CourseViewModel.swift
struct CourseViewModel {
    let name: String
    let detailTextString: String
    let accessoryType: UITableViewCellAccessoryType
		
    // Dependency Injection (DI)
    init(course: Course) {
        self.name = course.name
				
        if course.number_of_lessons &amp;gt; 35 {
            detailTextString = &quot;Lessons 30+ Check it Out!&quot;
            accessoryType = .detailDisclosureButton
        else {
            detailTextString = &quot;Lessons: \(course.number_of_lessons)&quot;
            accessoryType = .none
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;// CourseCell.swift
class CourseCell: UITableViewCell {
    var courseViewModel: CourseViewModel! {
        didSet {
           textLabel?.text = courseViewModel.name
           detailTextLabel?.text = courseViewModel.detailTextString
           accessoryType = courseViewModel.accessryType
        }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;// CoursesController.swift
fileprivate func fetchData() {
    Service.shared.fetchCourses { (courses, err) in
        if let err = err { return }
        
        self.courseViewModels = courses?.map({ return CourseViewModel(course: $0)}) ?? []
        self.tableView.reloadData()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This fetchData function is only available inside CoursesController.swift file, because it is a fileprivate. Brian Voong created a &lt;code&gt;Service.swift&lt;/code&gt; file from where this closure comes from which is not a relevant topic for this post. When accessed accordingly, it can be available to any classes but within CoursesController.swift file. But that’s not what we’re here to talk about. This function calls an API that returns us the courses, which is of type Course. Inside the closure, it is taking that &lt;code&gt;courses&lt;/code&gt; array into a CourseViewModel array. The CourseViewModel array will then be the data source of the &lt;code&gt;tableView&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;second-is-from-rebeloper&quot;&gt;Second is from Rebeloper&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;// User.swift
struct User {
    let name: String
    let age: Int
    backgroundColor: UIColor
		
    init(name: String, age: Int, backgroundColor: UIColor) {
        self.name = name
        self.age = age
        self.backgrouundColor = backgroundColor
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;// RootViewModel.swift
class RootViewModel {
    let user: User
    
    init(user: User) {
        self.user = user
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;// RootViewController.swift
var viewModel: RootViewModel! {
    didSet {
        view.backgroundColor = viewModel.user.backgroundColor
        navigationItem.title = &quot;\(viewModel.user.name), \(viewModel.user.age)&quot;
    }
}

viewDidLoad() {
    let user = User(name: &quot;Alex&quot;, age: 36, backgroundColor: .white)
    viewModel = RootViewModel(user: user)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, you won’t see a &lt;code&gt;tableView&lt;/code&gt;. Good! Cause maybe you though we need a table to do the MVVM.&lt;/p&gt;

&lt;p&gt;I think Rebeloper’s code doesn’t really bring out the need for MVVM. We can see how he accessed the &lt;code&gt;User&lt;/code&gt; model inside the view controller. While in Brian’s example, he did the same thing but indirectly. But anyway, I guess that’s how it works. Just another construct that looks similar to a &lt;code&gt;Model&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;take&quot;&gt;Take&lt;/h3&gt;

&lt;p&gt;Both examples almost have the same objective.&lt;/p&gt;

&lt;p&gt;To separate the view logic from the model logic and vice versa by creating an intermediary called a &lt;code&gt;ViewModel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Why should we do this? Who knows. I know MVC makes sense, but I don’t know how this does. We still have the controller and it makes it all the more confusing because it doesn’t say &lt;code&gt;MVVMC&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hold on, let’s find a better example to see why MVVM is talked about by developers. These examples don’t exaggerate enough why we need to use MVVM. It looks pretty redundant. This here is an example by &lt;a href=&quot;https://www.youtube.com/watch?v=nAI-BI-_YWs&quot;&gt;iOS Quickstart&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen%20Shot%202019-10-26%20at%208.16.49%20PM.png&quot; alt=&quot;mvvm&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now it’s starting to make sense. These static functions inside this ViewModel are called &lt;code&gt;Translation Codes&lt;/code&gt;. Blame &lt;code&gt;iOS Quickstart&lt;/code&gt; if I’m wrong about that. Without the MVVM architecture, we’ll be putting these translation codes inside our view controller and it gets messier there. The &lt;code&gt;VM&lt;/code&gt; of MVVM is just another way to create another file or folder to store the mess elsewhere if you consider these translation codes a mess, because I do.&lt;/p&gt;

&lt;p&gt;Remember I said &lt;code&gt;MVVMC&lt;/code&gt;? Well, I thought the controller has its own abbreviation like in &lt;code&gt;MVC&lt;/code&gt;. Turns out the V in M&lt;code&gt;V&lt;/code&gt;VM stands for View Controller. Invisible &lt;code&gt;C&lt;/code&gt; right there. I thought the view there was like table cell or something.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="swift" /><category term="model" /><category term="view" /><category term="controller" /><category term="viewmodel" /><category term="brian" /><category term="voong" /><category term="rebeloper" /><summary type="html">There are two MVVM tutorials I’ve come across. Let’s see how similar it is and how we can tell both are MVVM. I will arrange their code in this order: model, view model, and controller. There’s an extra in Brian Voong’s example.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.iosapptemplates.com/wp-content/uploads/2019/03/Screen-Shot-2019-03-17-at-8.25.44-PM.png" /></entry><entry><title type="html">Sharing UserDefault Between Apps</title><link href="http://iosjunkie.com/blog/sharing-userdefault-between-apps/" rel="alternate" type="text/html" title="Sharing UserDefault Between Apps" /><published>2019-10-21T16:00:00-08:00</published><updated>2019-10-21T16:00:00-08:00</updated><id>http://iosjunkie.com/blog/sharing-userdefault-between-apps</id><content type="html" xml:base="http://iosjunkie.com/blog/sharing-userdefault-between-apps/">&lt;p&gt;I just discovered a way for two apps to communicate with each other with the use of UserDefaults. I thought that UserDefault is only available locally in the app. Sandboxed in its own environment.&lt;/p&gt;

&lt;p&gt;The two apps should add &lt;code&gt;Groups&lt;/code&gt; capability each.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/R7HLz.png&quot; alt=&quot;group&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The group container string should start with &lt;code&gt;group&lt;/code&gt;. For example, &lt;code&gt;group.theCommonContainer&lt;/code&gt;. It’s just like a url which apps with the groups capability can access, provided that their container must have &lt;code&gt;group.theCommonContainer&lt;/code&gt;. But of course, it could be named anything else other than &lt;code&gt;theCommonContainer&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;access&quot;&gt;Access&lt;/h2&gt;

&lt;p&gt;In order to access the UserDefault that is being shared by the apps, access UserDefaults this way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let groupDefaults = UserDefaults(suiteName: &quot;group.theCommonContainer&quot;)

// reading something from key
let username = groupDefaults?.string(forKey: &quot;something&quot;)
&lt;/code&gt;&lt;/pre&gt;</content><author><name>jules</name></author><category term="" /><category term="userdefaults" /><category term="swift" /><category term="xcode" /><category term="apps" /><category term="ios" /><summary type="html">I just discovered a way for two apps to communicate with each other with the use of UserDefaults. I thought that UserDefault is only available locally in the app. Sandboxed in its own environment.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://miro.medium.com/max/6000/1*7Zy2OC1nxK-BqmDbGxtPDg.png" /></entry><entry><title type="html">Fake Airpods i500 TWS Review</title><link href="http://iosjunkie.com/blog/fake-airpods-i500-tws-review/" rel="alternate" type="text/html" title="Fake Airpods i500 TWS Review" /><published>2019-10-20T16:00:00-08:00</published><updated>2019-10-20T16:00:00-08:00</updated><id>http://iosjunkie.com/blog/fake-airpods-i500-tws-review</id><content type="html" xml:base="http://iosjunkie.com/blog/fake-airpods-i500-tws-review/">&lt;p&gt;I bought a pair of Apple Fake Airpods on &lt;a href=&quot;https://shopee.ph/product/164746332/2622313935&quot;&gt;Shopee&lt;/a&gt; for Php 1060 including shipping. Yes, that’s right! I bought it cheap. It’s around $20 and it’s worthy, I might add.&lt;/p&gt;

&lt;p&gt;I have looked into this for quite some time. I never knew I wanted them so much until I found myself trying to look for a fake one. The original one is just too much for its price. I’ve read a lot of bad reviews on lower models of TWS until I caught myself reading the reviews of an i500 TWS. There weren’t any bad reviews, but I was still skeptic because many TWS do have a defect or two. Some have only one side working, some only work for a week, and some are louder only on one side.&lt;/p&gt;

&lt;p&gt;It took risk to buy a fake product not knowing what condition it is in. The product I received had free silicone casing for the shell and a silicone string that holds the pair of airpods together like that of old people eye-glasses. Yeah that thing if you can imagine it.&lt;/p&gt;

&lt;p&gt;The sound is great. It fits perfectly. I can’t tell it apart from an original one because I never had one. If the music is loud, it is enough to cancel the noise outside.&lt;/p&gt;

&lt;p&gt;One of the downsides is that I can’t max it out. The sound distorts when the bass is very heavy. Like I have this surround sound effect on my phone. When turned on, it looks like my airpods can’t handle that bass. Its not to say it isn’t capable of bass. It is capable and sounds magnificent when the surround sound effect is turned off. I can still play some loud party music and the music would be crisp still. It just can’t handle the very loud bass or the kind of bass that scatters too much. I don’t think I’ve described it right.&lt;/p&gt;

&lt;p&gt;Another downside would be the latency. It lags when I play a video on streaming sites or even on a downloaded video. It doesn’t delay too much, sometimes it can be negligible.&lt;/p&gt;

&lt;p&gt;I have tried it both on my iPad and Vivo V9. Recording audio with airpods on my iPad gave me some shit quality, while in my android phone, it is actually crisp. However, the volume is lowered. I might have just spoken too softly on my airpods while I was recording my voice on the Vivo V9.&lt;/p&gt;

&lt;p&gt;Overall, I love the fake airpods. I use it all the time. The bluetooth connectivity is as convenient as when using bluetooth headset’s, connects instantly.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="airpods" /><category term="apple" /><category term="i500" /><category term="tws" /><summary type="html">I bought a pair of Apple Fake Airpods on Shopee for Php 1060 including shipping. Yes, that’s right! I bought it cheap. It’s around $20 and it’s worthy, I might add.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/41qIPi7taiL._SX385_.jpg" /></entry></feed>