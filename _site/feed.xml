<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://iosjunkie.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://iosjunkie.com/blog/" rel="alternate" type="text/html" /><updated>2019-10-09T04:52:42+08:00</updated><id>http://iosjunkie.com/blog/feed.xml</id><title type="html">iOS Junkie</title><subtitle>Demystifying complex instructions, tutorials, and a little bit more geared toward the iOS development or Swift stuff. Technical yet simple tips on how iOS components work.</subtitle><entry><title type="html">Native Messenger App For Mac OS (Review) vs Caprine</title><link href="http://iosjunkie.com/blog/native-messenger-app-for-mac-os-review/" rel="alternate" type="text/html" title="Native Messenger App For Mac OS (Review) vs Caprine" /><published>2019-10-08T00:00:00+08:00</published><updated>2019-10-08T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/native-messenger-app-for-mac-os-review</id><content type="html" xml:base="http://iosjunkie.com/blog/native-messenger-app-for-mac-os-review/">&lt;p&gt;I’m currently on Mojave and I just thought that it’s time I use an app for messenger. It takes quite a while to load Facebook messenger on my Chrome browser. Maybe it’s just my internet speed. So I looked for an app on the Mac App Store and there’s not much apps out there for native Mac OS app look of Messenger. This is probably the only one out there. The only one I’ve found at least. I’ve scrolled deep enough to see there’s no other like it. It has decent amount of stars as rating, but does it really live up to it?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen_Shot_2019-10-08_at_7_52_32_PM.png&quot; alt=&quot;chatmate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What can I say? It really looks native, but it is half-baked. Here’s why:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The login fields look alright, but the placeholder doesn’t say the username can be accepted too. It’s just &lt;code class=&quot;highlighter-rouge&quot;&gt;Email&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;phone number&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The login button is especially horrible looking. Just a plane white button with no rounded edges. Its font is too thin and the spacing around the text of the button is just not well thought of.&lt;/li&gt;
  &lt;li&gt;As you can see on the photo, the user’s icon is overlapping the window frame’s buttons.&lt;/li&gt;
  &lt;li&gt;Some text like &lt;code class=&quot;highlighter-rouge&quot;&gt;Chat&lt;/code&gt; is meant to be brighter on this dark mode. It definitely looks more suited to the light mode.&lt;/li&gt;
  &lt;li&gt;The light mode is actually more gray than white.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Other than that, I’m satisfied with the app. I bought it for only a dollar. I’m going to keep on using it because it’s way faster than loading the messenger website.&lt;/p&gt;

&lt;h2 id=&quot;update&quot;&gt;UPDATE:&lt;/h2&gt;

&lt;p&gt;Thank to &lt;a href=&quot;https://www.reddit.com/r/macapps/comments/dezb0e/native_messenger_app_for_mac_os_review/&quot;&gt;u/Auttoh&lt;/a&gt; for responding to my Reddit link post of this blog post. He gave me a tip on a similar app but not found on the app store. It’s from a &lt;a href=&quot;https://github.com/sindresorhus/caprine/&quot;&gt;github link&lt;/a&gt;. Caprine is an unofficial and privacy-focused Facebook Messenger app with many useful features. As you can see, I didn’t have to pixelate the names of my friends because they have this feature to hide names and avatars. It also allows you to follow the system’s appearance of your mac. Say you are in dark mode, the app will also be in dark mode. If you changed your system’s appearance to light mode, the app will also turn light mode. You can also choose to make its mode independent from the system’s appearance.&lt;/p&gt;

&lt;p&gt;There’s also a compact mode on this which hides away the names if your window is tinier. Only pictures of your friends will be shown on the side.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sindresorhus/caprine/raw/master/media/screenshot-compact.png&quot; alt=&quot;compact&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks way more sophisticated than &lt;code class=&quot;highlighter-rouge&quot;&gt;Chatmate&lt;/code&gt; but it doesn’t feel as snappy. It is build on javascript/&lt;code class=&quot;highlighter-rouge&quot;&gt;Electron&lt;/code&gt; hence it is not native. Although, it looks native enough actually. There are still some features that load like a web page, like when choosing &lt;code class=&quot;highlighter-rouge&quot;&gt;stickers&lt;/code&gt; or when loading a conversation from another friend.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="review" /><category term="mac" /><category term="os" /><category term="app" /><category term="messenger" /><category term="facebook" /><summary type="html">I’m currently on Mojave and I just thought that it’s time I use an app for messenger. It takes quite a while to load Facebook messenger on my Chrome browser. Maybe it’s just my internet speed. So I looked for an app on the Mac App Store and there’s not much apps out there for native Mac OS app look of Messenger. This is probably the only one out there. The only one I’ve found at least. I’ve scrolled deep enough to see there’s no other like it. It has decent amount of stars as rating, but does it really live up to it?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Screen%20Shot%202019-10-08%20at%207.52.43%20PM.png" /></entry><entry><title type="html">Basic Implementation of Local Notifications</title><link href="http://iosjunkie.com/blog/basic-implementation-of-local-notifications/" rel="alternate" type="text/html" title="Basic Implementation of Local Notifications" /><published>2019-10-08T00:00:00+08:00</published><updated>2019-10-08T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/basic-implementation-of-local-notifications</id><content type="html" xml:base="http://iosjunkie.com/blog/basic-implementation-of-local-notifications/">&lt;p&gt;Let’s get one thing straight now baby. Local notifications is not the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;Push&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;Remote&lt;/code&gt; notifications. It is also not the same as the Notification-Observer relationship which I will discuss [next][next]. They differ because local notifications don’t need triggers coming from outside the app. Either way, you’ll still need the &lt;code class=&quot;highlighter-rouge&quot;&gt;UNUserNotificationCenter&lt;/code&gt;, and for that, you need to import &lt;code class=&quot;highlighter-rouge&quot;&gt;UserNotifications&lt;/code&gt;. This is usually used in scheduling apps like alarm and todo-list.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// AppDelegate.swift
import UserNotifications

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {

    var window: UIWindow?

    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&amp;gt; Bool {
        // Override point for customization after application launch.
        
        if #available(iOS 10.0, *) {
          // For iOS 10 display notification (sent via APNS)
          UNUserNotificationCenter.current().delegate = self

          let authOptions: UNAuthorizationOptions = [.alert, .badge, .sound]
          UNUserNotificationCenter.current().requestAuthorization(
            options: authOptions,
            completionHandler: {_, _ in })
        } else {
          let settings: UIUserNotificationSettings =
          UIUserNotificationSettings(types: [.alert, .badge, .sound], categories: nil)
          application.registerUserNotificationSettings(settings)
        }
				
        return ApplicationDelegate.shared.application(application, didFinishLaunchingWithOptions: launchOptions)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We must have this in our AppDelegate.swift first. It asks permission from the user if he is okay yo receiving notifications from your app. That request will allow &lt;code class=&quot;highlighter-rouge&quot;&gt;alert, badge, and sound&lt;/code&gt;. Depending on how much you want the user to experience the notification. You can omit sound or the other types for example: &lt;code class=&quot;highlighter-rouge&quot;&gt;[.alert, .badge]&lt;/code&gt;. Next is the fun part, and you can choose to put it wherever your app needs it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 1. Preparing our notification content
let content = UNMutableNotificationContent()
content.title = &quot;Hey kid&quot;
content.body = &quot;Where's your parents?&quot;
content.sound = UNNotificationSound.default()
content.badge = 1

// 2. Preparing when our notification would fire
let date = Date().addingTimeInterval(5)
let dateComponents = Calendar.current.dateComponents([.year, .month, .day, .hour, .minute, .second], from: date)

// 3. Preparing what argument will trigger the notification to come up
let trigger = UNCalendarNotificationTrigger(dateMatching: dateComponents, repeats: false)

// 4. Combining all the preparations into one request
let uuidString = UUID().uuidString
let request = UNNotificationRequest(identifier: uuidString, content: content, trigger: trigger)

// 5. Finally, execute the request
let center = UNUserNotificationCenter.current()
center.add(request) { (err) in
    guard err == nil else { return }
    // Whatever you want to do after firing that badass notification
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;this-algorithm-is-broken-down-into-five-parts&quot;&gt;This algorithm is broken down into five parts.&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Create the content. That’s what the user can see in your notification.
    &lt;ol&gt;
      &lt;li&gt;The badge is the red circular thing on the top right corner of your app’s icon with the number of how many notifications were fired up.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Setting when to fire up the notification. If you print them out, this is how they’ll look like:
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;8 Oct 2019 at 2:53 AM&quot;&lt;/code&gt; // darw&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;year: 2019 month: 10 day: 8 hour: 2 minute: 53 second: 26 isLeapMonth: false &lt;/code&gt; // dateComponents&lt;/li&gt;
      &lt;li&gt;You can create your date component this way to be more specific about the date: &lt;code class=&quot;highlighter-rouge&quot;&gt;DateComponents(year: year, month: month, day: day)&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a trigger and add the &lt;code class=&quot;highlighter-rouge&quot;&gt;when&lt;/code&gt; to it. You can make it repeat its time interval by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;repeat&lt;/code&gt; to true.&lt;/li&gt;
  &lt;li&gt;It’s possible that there may be many requests of triggers, hence we needed that &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;. UUID() is one hell of a one liner that can give you a random string. You can use it anywhere actually. It gives off something like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;31A7BADF-93F8-40A0-B642-DEDE7BD6179B\n&quot;&lt;/code&gt; if you print it.&lt;/li&gt;
  &lt;li&gt;Finally we may now make the request appear more tangible and we need the current instance of our notification center to allow such a thing to happen.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;to-add-buttons-on-your-notification&quot;&gt;To add buttons on your notification&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://www.appboy.com/blog/wp-content/uploads/2017/05/Push-Action-Buttons-Example-4-300x169.png&quot; alt=&quot;buttons&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add something like this to step 1: &lt;code class=&quot;highlighter-rouge&quot;&gt;content.categoryIdentifier = &quot;alarm&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add something like this before step 5:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let show = UNNotificationAction(identifier: &quot;show&quot;, title: &quot;Tell me more…&quot;, options: .foreground)
let category = UNNotificationCategory(identifier: &quot;alarm&quot;, actions: [show], intentIdentifiers: [])
center.setNotificationCategories([category])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And make sure your ViewController conforms to &lt;code class=&quot;highlighter-rouge&quot;&gt;UNUserNotificationCenterDelegate&lt;/code&gt; to catch the response coming off from the user’s chosen action on the button.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -&amp;gt; Void) {
    // pull out the buried userInfo dictionary
    let userInfo = response.notification.request.content.userInfo

    if let customData = userInfo[&quot;customData&quot;] as? String {
        print(&quot;Custom data received: \(customData)&quot;)

        switch response.actionIdentifier {
        case UNNotificationDefaultActionIdentifier:
            // the user swiped to unlock
            print(&quot;Default identifier&quot;)

        case &quot;show&quot;:
            // the user tapped our &quot;show more info…&quot; button
            print(&quot;Show more information…&quot;)
            break

        default:
            break
        }
    }

    // you must call the completion handler when you're done
    completionHandler()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://www.youtube.com/watch?v=JuqQUP0pnZY&quot;&gt;CodeWithChris&lt;/a&gt; and &lt;a href=&quot;https://www.hackingwithswift.com/example-code/system/how-to-set-local-alerts-using-unnotificationcenter&quot;&gt;Paul Hudson @twostraws&lt;/a&gt; for making me understand how to actually do this.&lt;/p&gt;

&lt;p&gt;[next]:&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="local" /><category term="notification" /><category term="push" /><category term="remote" /><category term="UNUsernotification" /><category term="newbies" /><category term="basic" /><summary type="html">Let’s get one thing straight now baby. Local notifications is not the same as Push/Remote notifications. It is also not the same as the Notification-Observer relationship which I will discuss [next][next]. They differ because local notifications don’t need triggers coming from outside the app. Either way, you’ll still need the UNUserNotificationCenter, and for that, you need to import UserNotifications. This is usually used in scheduling apps like alarm and todo-list.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Notifications_Top_2x.png" /></entry><entry><title type="html">My First Post On Reddit</title><link href="http://iosjunkie.com/blog/my-first-post-on-reddit/" rel="alternate" type="text/html" title="My First Post On Reddit" /><published>2019-10-08T00:00:00+08:00</published><updated>2019-10-08T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/my-first-post-on-reddit</id><content type="html" xml:base="http://iosjunkie.com/blog/my-first-post-on-reddit/">&lt;p&gt;YouTube has been recommeding me blog tips and I’ve recently been keen on trying to get views on this blog. Today, my blog is still not indexed by google, but my half-baked portfolio &lt;code class=&quot;highlighter-rouge&quot;&gt;iosjunkie.com&lt;/code&gt; is. Which is weird.&lt;/p&gt;

&lt;p&gt;One of the tips of some YouTuber was to post your links on &lt;code class=&quot;highlighter-rouge&quot;&gt;Reddit&lt;/code&gt;. I was hesitant at first because I felt like it would be kind of like spamming on the internet, but that YouTuber said that it would help index my blog faster, and so I did. So, it happens that there are three ways to post on Reddit, just like the numerous ways to post on Facebook. You can post a &lt;code class=&quot;highlighter-rouge&quot;&gt;link, image, or a text&lt;/code&gt;. No wonder I’ve been seeing so many links only posts on Reddit. I thought they were spammy.&lt;/p&gt;

&lt;p&gt;The way it works is just copy and paste a link to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Url&lt;/code&gt; field. Once you’re done, the &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; field will automatically fill itself out, then submit. You can’t upload a thumbnail on the link you posted. It is also automatically generated coming from your link’s image metadata. Just brilliant! However, you can’t really post links everywhere. There are some topics that you won’t be allowed to post links to.&lt;/p&gt;

&lt;p&gt;The second link post was what I posted on my blog just yesterday. I just thought people would try to find it because it is a more recent issue with Xcode 11, and so people did find it really quick. Now I have &lt;code class=&quot;highlighter-rouge&quot;&gt;16 karmas&lt;/code&gt; just for a day of using Reddit. Whatever the hell that means. So it is true that it is easier for your blog to be found if you post on &lt;code class=&quot;highlighter-rouge&quot;&gt;Reddit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My first link post was a tutorial and I was sure people were going to find it more helpful, but as it turns out, no one bothered to touch it yet. I’m still sure that posting it on &lt;code class=&quot;highlighter-rouge&quot;&gt;Reddit&lt;/code&gt; will help that post be seen than not having posted it on Reddit.&lt;/p&gt;

&lt;p&gt;And.. surprise.. surprise! My blog views also went up really high. At least, the highest it has been since creation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/71862910_476156719779477_1624238644300611584_n.jpg&quot; alt=&quot;analytics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This feels great actually. It feels like I’m already indexed by &lt;code class=&quot;highlighter-rouge&quot;&gt;Google&lt;/code&gt; and like people are already flocking into my blog. Someone also recently just gave me a tip for my other blog post, hence I updated my blog post, and now, it has a more flavorful content. Dang, I’m really feeling like a legit blogger now.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="featured" /><category term="reddit" /><category term="post" /><category term="blog" /><summary type="html">YouTube has been recommeding me blog tips and I’ve recently been keen on trying to get views on this blog. Today, my blog is still not indexed by google, but my half-baked portfolio iosjunkie.com is. Which is weird.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Screen%20Shot%202019-10-08%20at%208.38.36%20PM.png" /></entry><entry><title type="html">Sophisticated Way To Use LocationManager Swift 5</title><link href="http://iosjunkie.com/blog/sophisticated-way-to-use-locationmanager-swift-5/" rel="alternate" type="text/html" title="Sophisticated Way To Use LocationManager Swift 5" /><published>2019-10-07T00:00:00+08:00</published><updated>2019-10-07T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/sophisticated-way-to-use-locationmanager-swift-5</id><content type="html" xml:base="http://iosjunkie.com/blog/sophisticated-way-to-use-locationmanager-swift-5/">&lt;p&gt;This is the most elegant solution I found on how to retrieve location with CoreLocation.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import CoreLocation
class ViewController: UIViewController {
    
    private let locationManager = CLLocationManager()
    private let operationQueue = OperationQueue()

    override func viewDidLoad() {
		super.viewDidLoad()
	
		operationQueue.isSuspended = true
		runLocationBlock {
			if let location = self.locationManager.location {
			}
		}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;We must create a Location Manager first and foremost.&lt;/li&gt;
  &lt;li&gt;We created an OperationQueue even though we only have one operation to execute, which is &lt;code class=&quot;highlighter-rouge&quot;&gt;runLocationBlock&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Suspend the operation or pause first to check if we are allowed to request location data.&lt;/li&gt;
  &lt;li&gt;Whatever is in the &lt;code class=&quot;highlighter-rouge&quot;&gt;runLocationBlock&lt;/code&gt; will only run if &lt;code class=&quot;highlighter-rouge&quot;&gt;operationQueue&lt;/code&gt; is unsuspended but rest assured this function is already running.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;extension ViewController: CLLocationManagerDelegate {
    private func configureLocationManager() {
        locationManager.desiredAccuracy = kCLLocationAccuracyBest
        locationManager.delegate = self
				
        // requestLocation will take 10 seconds to run, but only requests location just once
        locationManager.requestLocation()
				
        // startUpdatingLocation will fire up immediately
        // locationManager.startUpdatingLocation()
    }
		
    func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {
        print(&quot;error&quot;)
    }
    
    func locationManager(_ manager: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
        
        //If we're authorized to use location services, run all operations in the queue
        // otherwise if we were denied access or restricted or location is not determined, cancel the operations
				
        if(status == .authorizedWhenInUse || status == .authorizedAlways) {
            self.operationQueue.isSuspended = false
        }else if(status == .denied || status == .restricted || status == .notDetermined){
            self.operationQueue.cancelAllOperations()
        }
    }
    
    func runLocationBlock(callback: @escaping () -&amp;gt; ()) {
        
        //Get the current authorization status
        let authState = CLLocationManager.authorizationStatus()
        
        //If we have permissions, start executing the commands immediately
        // otherwise request permission
        DispatchQueue.main.async {
            if(authState == .authorizedAlways || authState == .authorizedWhenInUse) {
                self.configureLocationManager()
                self.operationQueue.isSuspended = false
            }else{
                //Request permission
                self.locationManager.requestWhenInUseAuthorization()
            }
        }
        
        //Create a closure with the callback function so we can add it to the operationQueue
        let block = {
            DispatchQueue.main.async {
                callback()
            }
        }
        
        //Add block to the queue to be executed asynchronously
        self.operationQueue.addOperation(block)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;runlocationblock&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RunLocationBlock&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;We know for one thing that &lt;code class=&quot;highlighter-rouge&quot;&gt;runLocationBlock&lt;/code&gt;’s operations is/are set suspended in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;We want to know the authorization status first.&lt;/li&gt;
  &lt;li&gt;If we are authorized, then let’s configure the &lt;code class=&quot;highlighter-rouge&quot;&gt;locationManager&lt;/code&gt; second then unsuspend, next, to allow our operationQueue to run all the blocks of operations it cointains.&lt;/li&gt;
  &lt;li&gt;If we are not authorized, a request will be shown to the user using the app.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt; will contain the callback, which is whatever you put inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;runLocationBlock { }&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;didchangeauthorization&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DidChangeAuthorization&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;This is just like what we’ve seen inside &lt;code class=&quot;highlighter-rouge&quot;&gt;runLocationBlock&lt;/code&gt;, but we don’t request for authorization again. Instead, when denied/restricted or if the location was not determined, then the &lt;code class=&quot;highlighter-rouge&quot;&gt;operationQueue&lt;/code&gt; will not run operations that were added to it.&lt;/li&gt;
  &lt;li&gt;This is only triggered after &lt;code class=&quot;highlighter-rouge&quot;&gt;self.locationManager.requestWhenInUseAuthorization()&lt;/code&gt; that you have seen inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;RunLocationBlock&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;configurelocationmanager&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ConfigureLocationManager&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;locationManager.delegate = self&lt;/code&gt; this is the most essential part of setting up our locationManager. This allows our &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt; to access protocol methods from &lt;code class=&quot;highlighter-rouge&quot;&gt;CLLocationManagerDelegate&lt;/code&gt; like &lt;code class=&quot;highlighter-rouge&quot;&gt;didChangeAuthorization&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If the desiredAccuracy is not set, its default is &lt;code class=&quot;highlighter-rouge&quot;&gt;kCLLocationAccuracyBest&lt;/code&gt; for iOS/Mac OS. For watchOS, &lt;code class=&quot;highlighter-rouge&quot;&gt;kCLLocationAccuracyHundredMeters&lt;/code&gt;. This is how you want the location data to be as accurate. It is important to note that higher accuracy will require longer time to retrieve location data.
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kCLLocationAccuracyKilometer &lt;/code&gt; - within a kilometer&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kCLLocationAccuracyThreeKilometers&lt;/code&gt; -within 3 kilometers. The higher, the better conservation of energy.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kCLLocationAccuracyBestForNavigation&lt;/code&gt;- usually used in navigation apps. Least energy efficient.
        &lt;ol&gt;
          &lt;li&gt;locationManager.activityType = .automotiveNavigation&lt;/li&gt;
          &lt;li&gt;locationManager.distanceFilter = 0&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kCLLocationAccuracyNearestTenMeters&lt;/code&gt; - less energy efficient.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;If you use &lt;code class=&quot;highlighter-rouge&quot;&gt;requestLocation()&lt;/code&gt;, it will only gather location data once. However, this takes 10 seconds as opposed to &lt;code class=&quot;highlighter-rouge&quot;&gt;startUpdatingLocation()&lt;/code&gt;, which fires immediately.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>jules</name></author><category term="" /><category term="location" /><category term="manager" /><category term="swift" /><category term="data" /><category term="corelocation" /><category term="operation" /><category term="queue" /><summary type="html">This is the most elegant solution I found on how to retrieve location with CoreLocation.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.stack.imgur.com/hDiMB.png" /></entry><entry><title type="html">Where Is Assistant Editor Mode In Xcode 11</title><link href="http://iosjunkie.com/blog/assistant-editor-mode-in-xcode-11/" rel="alternate" type="text/html" title="Where Is Assistant Editor Mode In Xcode 11" /><published>2019-10-07T00:00:00+08:00</published><updated>2019-10-07T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/assistant-editor-mode-in-xcode-11</id><content type="html" xml:base="http://iosjunkie.com/blog/assistant-editor-mode-in-xcode-11/">&lt;p&gt;Welcome to the world of Xcode 11 where it’s now confusing to find the assistant editor. Well, there it is. It is not in the same place anymore. On the top right corner of the storyboard, there’s this &lt;code class=&quot;highlighter-rouge&quot;&gt;Adjust Editor Options&lt;/code&gt; icon. Just click on that and choose &lt;code class=&quot;highlighter-rouge&quot;&gt;Assistant&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I’m so used to the old icon that it used to be, but now it’s just a text only button that is not that easy to navigate to. But why? Are they really pushing developers to use SwiftUI and depend on the canvas instead of our dearest storyboard?&lt;/p&gt;

&lt;p&gt;UPDATE: I thought I was the only one who put up an instruction for this. Well, here’s a better visual on how to really find it.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/rTn02yqIj6w&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>jules</name></author><category term="" /><category term="assistant" /><category term="editor" /><category term="view" /><category term="xcode" /><category term="where" /><summary type="html">Welcome to the world of Xcode 11 where it’s now confusing to find the assistant editor. Well, there it is. It is not in the same place anymore. On the top right corner of the storyboard, there’s this Adjust Editor Options icon. Just click on that and choose Assistant.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Screen%20Shot%202019-10-07%20at%203.11.58%20AM.png" /></entry><entry><title type="html">Grand Central Dispatch (GCD): Where To Start Learning</title><link href="http://iosjunkie.com/blog/grand-central-dispatch-gcd-where-to-start-learning/" rel="alternate" type="text/html" title="Grand Central Dispatch (GCD): Where To Start Learning" /><published>2019-10-07T00:00:00+08:00</published><updated>2019-10-07T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/grand-central-dispatch-gcd-where-to-start-learning</id><content type="html" xml:base="http://iosjunkie.com/blog/grand-central-dispatch-gcd-where-to-start-learning/">&lt;p&gt;I’ve been hearing and reading GCD for quite a while now. Grand Central Dispatch. Whoa! Big word! It’s really just a concept of using threads. It’s not a railway system, no.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;GCD is an API provided by apple to allow you to manage concurrent operations in a smooth way, in order to avoid freezing of your application and keep it always responsive for users. - Jaafar Barek&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/swift-multi-threading-using-gcd-for-beginners-2581b7aa21cb&quot;&gt;Swift Multi-Threading using GCD For Beginners&lt;/a&gt;. This is just a brief article with great visual aids to simply start off learning DispatchQueue.&lt;/p&gt;

&lt;p&gt;When you’re done with that, hold your breath and dive in two of these lakes. &lt;a href=&quot;https://dev.to/leogdion/asynchronous-multi-threaded-parallel-world-of-swift-4gjh&quot;&gt;Asynchronous Multi-Threaded Parallel World of Swift&lt;/a&gt; and &lt;a href=&quot;https://theswiftdev.com/2018/07/10/ultimate-grand-central-dispatch-tutorial-in-swift/&quot;&gt;Ultimate Grand Central Dispatch tutorial in Swift&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The former will first walk you through processing concepts and many visuals on how to use DispatchQueue, Semaphores, and SwiftUI’s combine in relation to asynchronous operations.&lt;/p&gt;

&lt;p&gt;The latter is almost the same but with less visuals and no &lt;code class=&quot;highlighter-rouge&quot;&gt;combine&lt;/code&gt;. DispatchWorkItem and deadlocks is discussed which isn’t found in the former.&lt;/p&gt;

&lt;p&gt;Both are really valuable resources for learning &lt;code class=&quot;highlighter-rouge&quot;&gt;GCD&lt;/code&gt;. It takes quite a while to grasp this simple concept but with broad applications, so I recommend reading on both to consolidate that chunk of knowledge. It is really intimidating to learn, since most of the time, programmers only usually use &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I bet these resources are good for interviews too.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="grand" /><category term="central" /><category term="dispatch" /><category term="dispatchqueue" /><category term="barrier" /><category term="ultimate" /><category term="guide" /><category term="asynchronous" /><category term="operation" /><category term="swiftui" /><category term="combine" /><category term="framework" /><summary type="html">I’ve been hearing and reading GCD for quite a while now. Grand Central Dispatch. Whoa! Big word! It’s really just a concept of using threads. It’s not a railway system, no. GCD is an API provided by apple to allow you to manage concurrent operations in a smooth way, in order to avoid freezing of your application and keep it always responsive for users. - Jaafar Barek</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://res.cloudinary.com/practicaldev/image/fetch/s--orob56V4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/ParallelConcurrency.001-1024x768.jpeg" /></entry><entry><title type="html">How Static Is Used</title><link href="http://iosjunkie.com/blog/how-static-is-used/" rel="alternate" type="text/html" title="How Static Is Used" /><published>2019-10-06T00:00:00+08:00</published><updated>2019-10-06T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/how-static-is-used</id><content type="html" xml:base="http://iosjunkie.com/blog/how-static-is-used/">&lt;p&gt;Static is like creating a global variable. You’ll see what I mean when you’ve watched Sean Allen’s video tutorial.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/s2E5hVxQAZQ&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;There’s just one hiccup here that might confuse the newbies. Sean used the term &lt;code class=&quot;highlighter-rouge&quot;&gt;Type&lt;/code&gt; and the struct’s name interchangeably.&lt;/p&gt;

&lt;p&gt;Let’s have at it one more time:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct Video {
    static let creator = &quot;iOS Junkie&quot;
    
    var title: String
    var viewCount: Int
}

let tutorial = Video(title: &quot;Static&quot;, viewCount: 1000)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Type&lt;/code&gt; mentioned by Sean is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Video&lt;/code&gt; struct, which owns the creator. Say you access the creator via &lt;code class=&quot;highlighter-rouge&quot;&gt;Video.creator&lt;/code&gt; without creating a &lt;code class=&quot;highlighter-rouge&quot;&gt;Video()&lt;/code&gt; object, then it is a &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; and not an &lt;code class=&quot;highlighter-rouge&quot;&gt;instance&lt;/code&gt; like tutorial. &lt;code class=&quot;highlighter-rouge&quot;&gt;tutorial&lt;/code&gt; is assigned an instance of &lt;code class=&quot;highlighter-rouge&quot;&gt;Video()&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;If you’re curious whether &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; can be accessed this like this &lt;code class=&quot;highlighter-rouge&quot;&gt;Video.title&lt;/code&gt;, then no. Even if it is pre-initialized a value, it will give out an error saying: &lt;code class=&quot;highlighter-rouge&quot;&gt;Instance member 'title' cannot be used on type 'Helper'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You’ll want to use static for a reason like you might not want to create an object to access its properies or methods making it possible to directly access the struct &lt;code class=&quot;highlighter-rouge&quot;&gt;Vlog&lt;/code&gt;’s properties without creating an object. Static can also be applied to a method, which allows you to do something like &lt;code class=&quot;highlighter-rouge&quot;&gt;Video.play()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’s also important to note that you can replace the creator’s value just by assigning it a new value this way:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Video.creator = &quot;Sean Allen&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next time you access &lt;code class=&quot;highlighter-rouge&quot;&gt;Video.creator&lt;/code&gt; or create an object with &lt;code class=&quot;highlighter-rouge&quot;&gt;Video()&lt;/code&gt;, the creator will be &lt;code class=&quot;highlighter-rouge&quot;&gt;Sean Allen&lt;/code&gt; by then.&lt;/p&gt;

&lt;p&gt;Now that we’re talking about static, there’s another way to access computed properties and methods of a construct without making an object. This is from Kilo Loco:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/CV0czLueGeI&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Helper {
    // Static - allowed in structs and classes
    static var staticStoredProperty = &quot;Static Stored Property&quot;
    static var staticComputedProperty: String {
        return &quot;Static computed property&quot;
    }
    
    static func staticMethod() {
        print(&quot;Static Method&quot;)
    }
    
    // Class - only allows within classes, not structs
    class var classComputedProperty: String {
        return &quot;Class computed property&quot;
    }
    
    class func classMethod() {
        print(&quot;class method&quot;)
    }
}

class SubHelper : Helper {
    override class var classComputedProperty: String {
        return &quot;subClassed computed property&quot;
    }
    
    override class func classMethod() {
        print(&quot;subclassed method&quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aside from &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt;, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; in exchange. No! Not the class construct. I’m talking about class type. It works almost similarly to static. However, you cannot store a property like you would with &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt;. With &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;, you can do something that &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; too can’t do. You can override computed properties and methods as you can see inside the the &lt;code class=&quot;highlighter-rouge&quot;&gt;SubHelper&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;It is important to note that you cannot use the &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; type inside a &lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt;, only inside classes.&lt;/p&gt;

&lt;p&gt;These are all valid ways to access properties and methods given the code above:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Helper.staticStoredProperty
Helper.staticComputedProperty
Helper.staticMethod()

Helper.classComputedProperty
Helper.classMethod()

SubHelper.classComputedProperty
SubHelper.classMethod()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>jules</name></author><category term="" /><category term="featured" /><category term="swift" /><category term="data" /><category term="structure" /><category term="static" /><category term="struct" /><category term="class" /><category term="construct" /><category term="type" /><summary type="html">Static is like creating a global variable. You’ll see what I mean when you’ve watched Sean Allen’s video tutorial.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.ytimg.com/vi/s2E5hVxQAZQ/hqdefault.jpg" /></entry><entry><title type="html">Take Your Swift Data Structures Knowledge To The Next Level</title><link href="http://iosjunkie.com/blog/take-your-swift-data-structures-knowledge-to-the-next-level/" rel="alternate" type="text/html" title="Take Your Swift Data Structures Knowledge To The Next Level" /><published>2019-10-05T00:00:00+08:00</published><updated>2019-10-05T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/take-your-swift-data-structures-knowledge-to-the-next-level</id><content type="html" xml:base="http://iosjunkie.com/blog/take-your-swift-data-structures-knowledge-to-the-next-level/">&lt;p&gt;I just found one of the best guides to prepare for your interview. I found out about this in Sean Allen’s Swift News. Though I wouldn’t recommended relying on this alone, in case you need to prepare for an interview, because there are other aspects of iOS development that needs perusing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/blog/assets/images/Screen%20Shot%202019-10-05%20at%209.26.13%20PM.png&quot; alt=&quot;ray wenderlich&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don’t always find Ray Wenderlich’s site a great place to look for tutorials. Some of the contents do baffle me sometimes. Although, it’s still a good place to start learning programming, Swift especially. This resource, &lt;a href=&quot;https://www.raywenderlich.com/762435-swift-interview-questions-and-answers&quot;&gt;Swift Interview Questions and Answers&lt;/a&gt;, is a good find for me though. It’s a good place to start learning or refreshing your knowledge on the most utilized methods of using the Swift language. It’s kind of like a flashcard wherein answers are hidden, then you press the reveal button to get an explanation.&lt;/p&gt;

&lt;p&gt;The explanations are superb! It’s not always just a bunch of paragraphs, some have a bunch of examples every step of the way and explained in the simplest-to-understand manner. I mean who needs more explaining when there’s the easy to understand examples. I wish there is a similar resource for &lt;code class=&quot;highlighter-rouge&quot;&gt;GCD&lt;/code&gt; because it is tough for newbies.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="swift" /><category term="interview" /><category term="questions" /><category term="reference" /><category term="knowledge" /><category term="Xcode" /><category term="iOS" /><summary type="html">I just found one of the best guides to prepare for your interview. I found out about this in Sean Allen’s Swift News. Though I wouldn’t recommended relying on this alone, in case you need to prepare for an interview, because there are other aspects of iOS development that needs perusing.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRX8GiuB-Wn_sJ6WubFAJbuOx_ArtUmQgrbCqpIj6rl9GFHJZ0m" /></entry><entry><title type="html">Swift: If Let vs. Guard Let</title><link href="http://iosjunkie.com/blog/swift-if-let-vs-guard-let/" rel="alternate" type="text/html" title="Swift: If Let vs. Guard Let" /><published>2019-10-04T00:00:00+08:00</published><updated>2019-10-04T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/swift-if-let-vs-guard-let</id><content type="html" xml:base="http://iosjunkie.com/blog/swift-if-let-vs-guard-let/">&lt;p&gt;This is a brief explanation for newbies. It’s because when I was still a newbie, I didn’t really understand how or when to use either of these two. I never touched them at all. If you want a more thorough explanation on this, check out the &lt;a href=&quot;https://docs.swift.org/swift-book/LanguageGuide/OptionalChaining.html&quot;&gt;Swift Language Guide&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if john.residence?.printNumberOfRooms() != nil {
    print(&quot;good&quot;)
} else {
    print(&quot;bad&quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both if and guard checks whether the value of a variable could be nil. They are interchangeable depending on the implementation. Let’s start with the code above. This is a primitive way of checking whether a variable/method is or returns &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;. It is closer to how &lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt; works than &lt;code class=&quot;highlighter-rouge&quot;&gt;if let&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if let firstRoomName = john.residence?[0].name {
    print(firstRoomName)
} else {
    print(&quot;bad.&quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is important to note here that &lt;code class=&quot;highlighter-rouge&quot;&gt;if let&lt;/code&gt; only allows you to acces the new variable &lt;code class=&quot;highlighter-rouge&quot;&gt;firstRoomName&lt;/code&gt; inside the first bracket. That is if  john.residence?[0].name &lt;code class=&quot;highlighter-rouge&quot;&gt;optional&lt;/code&gt; assigns a non-nil value in our new variable.&lt;/p&gt;

&lt;p&gt;Outside this &lt;code class=&quot;highlighter-rouge&quot;&gt;if let&lt;/code&gt; conditional, &lt;code class=&quot;highlighter-rouge&quot;&gt;firstRoomName&lt;/code&gt; cannot be accessed.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;guard let firstRoomName = john.residence?[0].name else {
    print(&quot;bad.&quot;)
    return
}

print(firstRoomName)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;guard let&lt;/code&gt; is just a smart way of making sure a new variable, &lt;code class=&quot;highlighter-rouge&quot;&gt;firstRoomName&lt;/code&gt;, will not be accessible anywhere if it is &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;. If &lt;code class=&quot;highlighter-rouge&quot;&gt;firstRoomName&lt;/code&gt; happens to be assigned a &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; value, then “bad” will print and will escape the function where this piece of conditional is located, never allowing to pass &lt;code class=&quot;highlighter-rouge&quot;&gt;firstRoomName&lt;/code&gt; to anyone who wants to access its value. The code will not be able to reach the &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; line anymore.&lt;/p&gt;

&lt;p&gt;However, if &lt;code class=&quot;highlighter-rouge&quot;&gt;john.residence?[0].name&lt;/code&gt; hold say a string value, then all is good. &lt;code class=&quot;highlighter-rouge&quot;&gt;firstRoomName&lt;/code&gt; will now have an unwrapped value of &lt;code class=&quot;highlighter-rouge&quot;&gt;john.residence?[0].name&lt;/code&gt;.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="swift" /><category term="language" /><summary type="html">This is a brief explanation for newbies. It’s because when I was still a newbie, I didn’t really understand how or when to use either of these two. I never touched them at all. If you want a more thorough explanation on this, check out the Swift Language Guide.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.ytimg.com/vi/P2YZu9MwLaM/maxresdefault.jpg" /></entry><entry><title type="html">MapKit Theme Style Overlay Swift 5</title><link href="http://iosjunkie.com/blog/mapkit-theme-overlay-swift-5/" rel="alternate" type="text/html" title="MapKit Theme Style Overlay Swift 5" /><published>2019-10-04T00:00:00+08:00</published><updated>2019-10-04T00:00:00+08:00</updated><id>http://iosjunkie.com/blog/mapkit-theme-overlay-swift-5</id><content type="html" xml:base="http://iosjunkie.com/blog/mapkit-theme-overlay-swift-5/">&lt;p&gt;You don’t want to use MapBox or GoogleMap? Me too. I don’t want to pay for something that isn’t going to be much different. For now, I don’t see myself using their extra features, whatever those might be.&lt;/p&gt;

&lt;p&gt;I’ve been looking for a workaround for this for a few months now. I must have overlooked this &lt;a href=&quot;https://medium.com/@ortizfernandomartin/customize-mapkits-mkmapview-with-google-maps-styling-wizard-a5dcc095e19f&quot;&gt;post&lt;/a&gt; on Medium. It’s now an outdated solution, but I found a way for it to work. Thanks to Fernando Martín Ortiz for that &lt;a href=&quot;https://medium.com/@ortizfernandomartin/customize-mapkits-mkmapview-with-google-maps-styling-wizard-a5dcc095e19f&quot;&gt;post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’s this pod, made by Fernando himself, that you need to install.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod &quot;MapKitGoogleStyler&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wherever you’re using the map view, you need to import this library: &lt;code class=&quot;highlighter-rouge&quot;&gt;import MapKitGoogleStyler&lt;/code&gt;. And this is the sample code that contains a single change from Fernando’s view controller that shows the map view.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import UIKit
import MapKit
import MapKitGoogleStyler

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        guard let overlayFileURLString = Bundle.main.path(forResource: &quot;overlay&quot;, ofType: &quot;json&quot;) else {
                return
        }
        let overlayFileURL = URL(fileURLWithPath: overlayFileURLString)
        
        // After that, you can create the tile overlay using MapKitGoogleStyler
        guard let tileOverlay = try? MapKitGoogleStyler.buildOverlay(with: overlayFileURL) else {
            return
        }
        
        // And finally add it to your MKMapView
        mapView.addOverlay(tileOverlay)
    }

    func mapView(_ mapView: MKMapView, rendererFor overlay: MKOverlay) -&amp;gt; MKOverlayRenderer {
            // This is the final step. This code can be copied and pasted into your project
            // without thinking on it so much. It simply instantiates a MKTileOverlayRenderer
            // for displaying the tile overlay.
            if let tileOverlay = overlay as? MKTileOverlay {
                return MKTileOverlayRenderer(tileOverlay: tileOverlay)
            } else {
                return MKOverlayRenderer(overlay: overlay)
            }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You might run into an error because the pod is a bit outdated, but no worries. All you have to do is find that GoogleStyle.swift and replace it with &lt;a href=&quot;https://github.com/iosjunkie/StyleMapKit/blob/master/StyleMapKit/GoogleStyle.swift&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Notice that we need a json file named &lt;code class=&quot;highlighter-rouge&quot;&gt;overlay&lt;/code&gt;. It’s where our theme’s color scheme lies, but make sure you’ve configured the &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; file this way. Otherwise, your json will not be found by &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle.main.path(forResource: &quot;overlay&quot;, ofType: &quot;json&quot;) &lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/Screen%20Shot%202019-10-04%20at%209.22.14%20PM.png&quot; alt=&quot;json&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You may be wondering, where do I get such theme? Did I make those myself?&lt;/p&gt;

&lt;p&gt;No, silly! I copied that JSON file. There’s actually tons of those themes out there. I just got mine from &lt;a href=&quot;https://snazzymaps.com/style/282895/xemeneies-pou&quot;&gt;Snazzy Maps&lt;/a&gt;.&lt;/p&gt;</content><author><name>jules</name></author><category term="" /><category term="featured" /><category term="swift" /><category term="mapkit" /><category term="UIKit" /><category term="mapbox" /><category term="googlemap" /><summary type="html">You don’t want to use MapBox or GoogleMap? Me too. I don’t want to pay for something that isn’t going to be much different. For now, I don’t see myself using their extra features, whatever those might be.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://iosjunkie.com/blog/assets/images/Simulator%20Screen%20Shot%20-%20iPhone%208%20Plus%20-%202019-10-04%20at%2020.23.31.png" /></entry></feed>